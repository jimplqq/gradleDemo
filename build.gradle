plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

def env = System.getProperty("profile") ?: "dev"

apply from: "profile-${env}.gradle"

processResources {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [profileName: env]
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

def group = 'com.example'
def artifactId = 'demo'
sourceCompatibility = '8'

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven {
        name 'lucene-snapshots'
        url 'https://s3.amazonaws.com/download.elasticsearch.org/lucenesnapshots/83f9835'
    }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'


    implementation("mysql:mysql-connector-java:8.0.18")

// https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.2.0'
    implementation("org.springframework.boot:spring-boot-starter-redis:1.3.6.RELEASE")

    implementation("javax.validation:validation-api:1.1.0.Final")
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '7.0.0.Alpha4'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation group: 'com.google.guava', name: 'guava', version: '20.0'
    implementation("com.alibaba:fastjson:1.2.68")
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation("com.google.inject:guice:4.2.2")
    implementation("cglib:cglib:3.3.0")
    implementation("com.squareup.okhttp3:okhttp:4.8.1")

    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch
//    implementation group: 'org.springframework.data', name: 'spring-data-elasticsearch', version: '4.2.4'
// https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch
    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.14.0'
// https://mvnrepository.com/artifact/org.elasticsearch.client/elasticsearch-rest-high-level-client
    implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '7.14.0'


    implementation group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.4.4.3-SNAPSHOT'
    implementation group: 'com.baomidou', name: 'mybatis-plus-core', version: '3.4.4.3-SNAPSHOT'
    implementation group: 'com.baomidou', name: 'mybatis-plus-extension', version: '3.4.4.3-SNAPSHOT'
    implementation group: 'com.baomidou', name: 'mybatis-plus', version: '3.4.4.3-SNAPSHOT'
//    implementation("com.baomidou:mybatis-mate-starter:1.0.13")

    implementation 'cn.hutool:hutool-all:5.7.12'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

allprojects {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenLocal()
        mavenCentral()
    }
}


// 需要继承自DefaultTask

class HelloWorldTask extends DefaultTask {
    // @Optional 表示在配置该Task时，message是可选的。
    @Optional
    @OutputDirectory
    String message = 'I am kaku'
    // @TaskAction 表示该Task要执行的动作,即在调用该Task时，hello()方法将被执行

    @TaskAction
    def hello(){
        println "hello world $message"
    }
}

// hello使用了默认的message值
task hello(type:HelloWorldTask)

// 重新设置了message的值
task helloOne(type:HelloWorldTask){
    message ="I am a android developer"
}

//task intro {
//    dependsOn hello
//    doLast {
//        println 'intro'
//    }
//}